// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . 2 2 2 2 2 2 . 2 . 2 . 2 2 
2 2 . . . . . 2 . . 2 . 2 . 2 2 
. 2 . 2 . 2 2 2 2 2 2 . 2 . . . 
. 2 2 2 . . . . . . . . 2 . 2 . 
. 2 . 2 . 2 . 2 . 2 . 2 2 2 2 . 
. 2 . 2 . 2 2 2 . . . 2 . . . . 
. 2 . 2 . 2 . 2 2 2 2 2 . 2 2 2 
. 2 . . . 2 . . . . . . . 2 . . 
. 2 . 2 2 2 2 . 2 . 2 2 . . . . 
. . . 2 2 . . . 2 . . . . 2 . . 
2 2 . . . . 2 . 2 . 2 2 2 2 2 2 
. 2 2 2 2 . 2 . . . . . . . . . 
. . . . . . 2 2 . 2 2 2 2 . 2 2 
. 2 2 2 2 2 2 . . . . . . . . . 
. 2 2 2 2 2 2 . 2 2 2 2 2 2 2 . 
. . . . . . . . 2 . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.floorLight2,sprites.dungeon.chestOpen,myTiles.tile1,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile4,sprites.dungeon.collectibleInsignia,sprites.dungeon.chestOpen,sprites.dungeon.floorDark2], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
2 2 . . . 2 . . . . . . . . 2 2 
. 2 2 2 . 2 2 2 . 2 . 2 2 . 2 . 
. 2 . . . . . . . 2 . 2 . . . . 
. . . 2 2 2 2 2 2 2 2 2 2 . 2 . 
. 2 2 2 . . . . . 2 . . 2 . 2 . 
. . 2 . . 2 2 2 2 2 2 . 2 . . . 
2 . 2 2 . . . . . . 2 . 2 . 2 . 
. . 2 . . 2 . 2 . 2 2 . 2 . 2 . 
. 2 . 2 . 2 . 2 2 . . . . . 2 2 
. . 2 2 . 2 . . 2 2 2 . 2 . . . 
. 2 . . . 2 2 2 2 . 2 . 2 . 2 . 
. . . 2 2 2 . . 2 . . . 2 2 2 . 
. 2 . 2 . 2 . 2 2 2 2 . 2 . 2 . 
. 2 . . . . . 2 . . . . 2 . 2 . 
. 2 2 2 2 . 2 2 . 2 2 2 2 . . . 
. . . 2 . . . 2 . . . . . . 2 . 
`, [myTiles.transparency16,sprites.dungeon.collectibleInsignia,sprites.dungeon.chestOpen,myTiles.tile4,sprites.dungeon.floorLight2], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . 2 . . . . 2 2 2 2 2 . 
2 2 2 2 . 2 2 . 2 . . . . . . . 
. . . 2 . . . . 2 . 2 2 . 2 2 2 
. 2 . 2 . 2 2 2 2 2 2 2 . . . . 
. 2 . . . . . 2 . 2 . 2 2 2 2 . 
. 2 2 2 2 2 . . . . . . . . 2 . 
. . . . 2 2 2 2 2 2 . 2 2 2 2 2 
2 2 2 . . 2 . 2 . . . 2 . 2 2 . 
. . . . 2 2 . 2 . 2 . 2 . . . . 
. 2 . 2 . . . 2 2 2 2 2 . 2 . 2 
. 2 2 . . 2 . . . . 2 . . 2 . 2 
. 2 . . 2 . . 2 . 2 2 2 2 2 . . 
. 2 . 2 . . 2 . . . 2 . 2 2 2 . 
. . . 2 . 2 2 2 2 2 2 . . . . . 
2 . 2 2 . . . . . . 2 . 2 2 2 . 
2 . 2 2 2 2 2 2 2 . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.collectibleInsignia,sprites.dungeon.chestOpen,myTiles.tile5,sprites.dungeon.floorDark2], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile2":
            case "tile4":return tile4;
            case "myTile3":
            case "tile5":return tile5;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
